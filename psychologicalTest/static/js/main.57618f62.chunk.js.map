{"version":3,"sources":["fbase.tsx","pages/AuthForm.tsx","elements/Contents/MainContents.tsx","elements/Common/ImageUpload.tsx","elements/Common/DynamicInput.tsx","elements/RegisterElements/RegisterFirstStep.tsx","elements/RegisterElements/RegisterSecStep.tsx","elements/RegisterElements/RegisterStep.tsx","elements/Contents/RegisterTestContents.tsx","Router.tsx","pages/MainPage.tsx","App.tsx","index.tsx"],"names":["firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGIN_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","firebase","initializeApp","analytics","authService","auth","firestore","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","history","useHistory","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","push","message","className","type","placeholder","required","onClick","prev","MainContents","justify","align","icon","PlusOutlined","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","isLt2M","size","Avatar","state","loading","imageUrl","handleChange","info","status","originFileObj","setState","this","uploadButton","LoadingOutlined","style","marginTop","listType","showUploadList","src","alt","width","React","Component","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","DynamicInput","List","rules","validator","_","names","length","Promise","reject","Error","fields","add","remove","errors","map","field","index","Item","label","key","validateTrigger","whitespace","noStyle","MinusCircleOutlined","position","top","margin","color","fontSize","cursor","transition","ErrorList","FormItem","Form","onFinish","values","RegisterFirstStep","props","testTitle","question","setTestTitle","setQuestion","answerArr","setAnswerArr","previewURL","title","bordered","htmlType","RegisterSecStep","autoComplete","fieldKey","restField","display","marginBottom","block","Step","Steps","RegisterStep","steps","content","functionSet","current","setCurrent","RegisterTestContents","AppRouter","exact","path","MainPage","Header","Layout","Content","Footer","Sider","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","height","background","theme","mode","defaultSelectedKeys","UserOutlined","VideoCameraOutlined","UploadOutlined","isLoggedIn","signOut","padding","minHeight","textAlign","App","init","setInit","userObj","setUserObj","useEffect","onAuthStateChanged","user","displayName","uid","updateProfile","args","basename","refreshUser","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57618f62.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/analytics\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { authService } from \"../fbase\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const onChange = (event: { target: { name: any; value: any } }) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event: { preventDefault: () => void }) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          className=\"authInput\"\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\nexport default AuthForm;\r\n","import { Col, Row, Button } from \"antd\";\r\nimport React from \"react\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MainContents = () => {\r\n  const history = useHistory();\r\n  const onRegisterBtnClick = () => {\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  return (\r\n    <Row justify=\"center\" align=\"middle\">\r\n      <Col>\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlusOutlined />}\r\n          onClick={onRegisterBtnClick}\r\n        >\r\n          나만의 테스트 등록\r\n        </Button>\r\n        <Button type=\"primary\" icon={<PlusOutlined />}>\r\n          나만의 테스트 등록\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\nexport default MainContents;\r\n","import { Upload, message } from \"antd\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport React from \"react\";\r\n\r\nfunction getBase64(img: any, callback: any) {\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file: any) {\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"You can only upload JPG/PNG file!\");\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error(\"Image must smaller than 2MB!\");\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\n// const ImageUpload = () => {\r\n\r\n// }\r\nclass Avatar extends React.Component {\r\n  state = {\r\n    loading: false,\r\n    imageUrl: \"\",\r\n  };\r\n\r\n  handleChange = (info: any) => {\r\n    if (info.file.status === \"uploading\") {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl: any) =>\r\n        this.setState({\r\n          imageUrl,\r\n          loading: false,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { loading, imageUrl } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div style={{ marginTop: 8 }}>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <Upload\r\n        name=\"avatar\"\r\n        listType=\"picture-card\"\r\n        className=\"avatar-uploader\"\r\n        showUploadList={false}\r\n        beforeUpload={beforeUpload}\r\n        onChange={this.handleChange}\r\n      >\r\n        {imageUrl ? (\r\n          <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\r\n        ) : (\r\n          uploadButton\r\n        )}\r\n      </Upload>\r\n    );\r\n  }\r\n}\r\nexport default Avatar;\r\n// export default ImageUpload;\r\n","import { Form, Input, Button } from \"antd\";\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 20 },\r\n  },\r\n};\r\nconst formItemLayoutWithOutLabel = {\r\n  wrapperCol: {\r\n    xs: { span: 24, offset: 0 },\r\n    sm: { span: 20, offset: 4 },\r\n  },\r\n};\r\n\r\nconst DynamicInput = () => {\r\n  return (\r\n    <Form.List\r\n      name=\"names\"\r\n      rules={[\r\n        {\r\n          validator: async (_, names) => {\r\n            if (!names || names.length < 2) {\r\n              return Promise.reject(new Error(\"At least 2 passengers\"));\r\n            }\r\n          },\r\n        },\r\n      ]}\r\n    >\r\n      {(fields, { add, remove }, { errors }) => (\r\n        <>\r\n          {fields.map((field, index) => (\r\n            <Form.Item\r\n              {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n              label={index === 0 ? \"Passengers\" : \"\"}\r\n              required={false}\r\n              key={field.key}\r\n            >\r\n              <Form.Item\r\n                {...field}\r\n                validateTrigger={[\"onChange\", \"onBlur\"]}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message:\r\n                      \"Please input passenger's name or delete this field.\",\r\n                  },\r\n                ]}\r\n                noStyle\r\n              >\r\n                <Input placeholder=\"passenger name\" style={{ width: \"60%\" }} />\r\n              </Form.Item>\r\n              {fields.length > 1 ? (\r\n                <MinusCircleOutlined\r\n                  style={{\r\n                    position: \"relative\",\r\n                    top: \"4px\",\r\n                    margin: \"0 8px\",\r\n                    color: \"#999\",\r\n                    fontSize: \"24px\",\r\n                    cursor: \"pointer\",\r\n                    transition: \"all 0.3s\",\r\n                  }}\r\n                  onClick={() => remove(field.name)}\r\n                />\r\n              ) : null}\r\n            </Form.Item>\r\n          ))}\r\n          <Form.Item>\r\n            <Button\r\n              type=\"dashed\"\r\n              onClick={() => add()}\r\n              style={{ width: \"60%\" }}\r\n              icon={<PlusOutlined />}\r\n            >\r\n              Add field\r\n            </Button>\r\n            <Button\r\n              type=\"dashed\"\r\n              onClick={() => {\r\n                add(\"The head item\", 0);\r\n              }}\r\n              style={{ width: \"60%\", marginTop: \"20px\" }}\r\n              icon={<PlusOutlined />}\r\n            >\r\n              Add field at head\r\n            </Button>\r\n            <Form.ErrorList errors={errors} />\r\n          </Form.Item>\r\n        </>\r\n      )}\r\n    </Form.List>\r\n  );\r\n};\r\nexport default DynamicInput;\r\n","import { Card, Col, Image, Input, Row, Form, Button } from \"antd\";\r\nimport Avatar from \"../Common/ImageUpload\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { RegisterProps } from \"../../interfaces/RegisterProps\";\r\nimport DynamicInput from \"../Common/DynamicInput\";\r\nconst FormItem = Form.Item;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 20 },\r\n  },\r\n};\r\nconst formItemLayoutWithOutLabel = {\r\n  wrapperCol: {\r\n    xs: { span: 24, offset: 0 },\r\n    sm: { span: 20, offset: 4 },\r\n  },\r\n};\r\nconst onFinish = (values: any) => {\r\n  console.log(\"Received values of form:\", values);\r\n};\r\nconst RegisterFirstStep = (props: any) => {\r\n  const {\r\n    testTitle,\r\n    setTestTitle,\r\n    question,\r\n    setQuestion,\r\n    answerArr,\r\n    setAnswerArr,\r\n    onChange,\r\n  } = props;\r\n  let profile_preview = null;\r\n  const [imgInfo, setImgInfo] = useState<RegisterProps>({\r\n    file: \"\",\r\n    previewURL: \"\",\r\n  });\r\n  const showPreview = () => {\r\n    console.log(imgInfo);\r\n    if (imgInfo.file !== \"\") {\r\n      profile_preview = (\r\n        <Image\r\n          className=\"profile_preview\"\r\n          src={imgInfo.previewURL as string}\r\n        ></Image>\r\n      );\r\n    }\r\n  };\r\n  // useEffect(() => {\r\n  //     console.log(imgInfo)\r\n  //     if(imgInfo.file !== ''){\r\n  //         profile_preview = <img className='profile_preview' src={imgInfo.previewURL as string}></img>\r\n  //       }\r\n  // })\r\n  const handleFileOnChange = (event: any) => {\r\n    event.preventDefault();\r\n    let reader = new FileReader();\r\n    let file = event.target.files[0];\r\n    reader.onloadend = () => {\r\n      setImgInfo({\r\n        file: file,\r\n        previewURL: reader.result as string,\r\n      });\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <Input type='file' \r\n            accept='image/jpg,impge/png,image/jpeg,image/gif' \r\n            name='profile_img' \r\n            onChange={handleFileOnChange}>\r\n        </Input> */}\r\n      {/* {showPreview()} */}\r\n      <Form\r\n        style={{ marginTop: 20 }}\r\n        name=\"dynamic_form_item\"\r\n        {...formItemLayoutWithOutLabel}\r\n        onFinish={onFinish}\r\n      >\r\n      <Card title=\"나만의 테스트 등록\" bordered={false}>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Col>\r\n            <FormItem label=\"메인에 노출될 사진 등록\">\r\n              <Row justify=\"center\" align=\"middle\">\r\n                <Col>\r\n                  <Avatar></Avatar>\r\n                </Col>\r\n              </Row>\r\n            </FormItem>\r\n            <FormItem label=\"테스트 명\" name=\"title\">\r\n              <Input\r\n                type=\"text\"\r\n                required\r\n                value={testTitle}\r\n                onChange={onChange}\r\n                className=\"title\"\r\n              />\r\n            </FormItem>\r\n            <FormItem label=\"질문\" name=\"question\">\r\n              <Input\r\n                type=\"text\"\r\n                required\r\n                value={question}\r\n                onChange={onChange}\r\n                className=\"question\"\r\n              />\r\n            </FormItem>\r\n            <FormItem label=\"결과\">\r\n              <DynamicInput></DynamicInput>\r\n            </FormItem>\r\n\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nexport default RegisterFirstStep;\r\n","import { Form, Input, Button, Space, Col, Row } from \"antd\";\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Avatar from \"../Common/ImageUpload\";\r\nimport DynamicInput from \"../Common/DynamicInput\";\r\n\r\nconst RegisterSecStep = () => {\r\n  const onFinish = (values: any) => {\r\n    console.log(\"Received values of form:\", values);\r\n  };\r\n  return (\r\n    <Form name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\r\n      <Row justify=\"center\" align=\"middle\">\r\n        <Col>\r\n          <Form.List name=\"detail\">\r\n            {(fields, { add, remove }) => (\r\n              <>\r\n                {fields.map(({ key, name, fieldKey, ...restField }) => (\r\n                  <>\r\n                    <Space\r\n                      key={key}\r\n                      style={{ display: \"flex\", marginBottom: 8 }}\r\n                      align=\"baseline\"\r\n                    >\r\n                      <Form.Item label={key + 1 + \"번째 문제의 사진\"}>\r\n                        <Row justify=\"center\" align=\"middle\">\r\n                          <Col>\r\n                            <Avatar></Avatar>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form.Item>\r\n                      <MinusCircleOutlined onClick={() => remove(name)} />\r\n                    </Space>\r\n                    <Form.Item label=\"질문\" name=\"question\">\r\n                      <Input type=\"text\" required className=\"question\" />\r\n                    </Form.Item>\r\n                    <Form.Item label=\"답변\" name=\"question\">\r\n                    <DynamicInput></DynamicInput>\r\n                    </Form.Item>\r\n                    <Space\r\n                      key={key}\r\n                      style={{ display: \"flex\", marginBottom: 8 }}\r\n                      align=\"baseline\"\r\n                    >\r\n                      <Form.Item\r\n                        {...restField}\r\n                        name={[name, \"first\"]}\r\n                        fieldKey={[fieldKey, \"first\"]}\r\n                        rules={[\r\n                          { required: true, message: \"Missing first name\" },\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"First Name\" />\r\n                      </Form.Item>\r\n                      <Form.Item\r\n                        {...restField}\r\n                        name={[name, \"last\"]}\r\n                        fieldKey={[fieldKey, \"last\"]}\r\n                        rules={[\r\n                          { required: true, message: \"Missing last name\" },\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Last Name\" />\r\n                      </Form.Item>\r\n                    </Space>\r\n                  </>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => add()}\r\n                    block\r\n                    icon={<PlusOutlined />}\r\n                  >\r\n                    Add field\r\n                  </Button>\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\nexport default RegisterSecStep;\r\n","import React from \"react\";\r\nimport { Steps, Divider, Button } from \"antd\";\r\nimport RegisterFirstStep from \"./RegisterFirstStep\";\r\nimport RegisterSecStep from \"./RegisterSecStep\";\r\n\r\nconst { Step } = Steps;\r\n\r\nconst RegisterStep = (props: any) => {\r\n  const steps = [\r\n    {\r\n      content: <RegisterFirstStep functionSet={props}></RegisterFirstStep>,\r\n    },\r\n    {\r\n      content: <RegisterSecStep></RegisterSecStep>,\r\n    },\r\n    {\r\n      content: \"Last-content\",\r\n    },\r\n  ];\r\n  const [current, setCurrent] = React.useState(0);\r\n\r\n  const next = () => {\r\n    setCurrent(current + 1);\r\n  };\r\n\r\n  const prev = () => {\r\n    setCurrent(current - 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Steps size=\"small\" current={current}>\r\n        <Step title=\"기본정보\" />\r\n        <Step title=\"상세정보\" />\r\n        <Step title=\"등록완료\" />\r\n      </Steps>\r\n      <div className=\"steps-content\">{steps[current].content}</div>\r\n      <div className=\"steps-action\">\r\n        {current > 0 && (\r\n          <Button style={{ margin: \"0 8px\" }} onClick={() => prev()}>\r\n            Previous\r\n          </Button>\r\n        )}\r\n        {current < steps.length - 1 && (\r\n          <Button type=\"primary\" onClick={() => next()}>\r\n            Next\r\n          </Button>\r\n        )}\r\n\r\n        {current === steps.length - 1 && (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => console.log(\"Processing complete!\")}\r\n          >\r\n            Done\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default RegisterStep;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport RegisterStep from \"../RegisterElements/RegisterStep\";\r\nimport { Form } from \"antd\";\r\n\r\nconst RegisterTestContents = () => {\r\n  const history = useHistory();\r\n  const [testTitle, setTestTitle] = useState();\r\n  const [question, setQuestion] = useState();\r\n  const [answerArr, setAnswerArr] = useState();\r\n  const onChange = (event: any) => {\r\n    console.log(event);\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"title\") {\r\n      setTestTitle(value);\r\n    } else if (name === \"question\") {\r\n      setQuestion(value);\r\n    } else if (name === \"answer\") {\r\n      setAnswerArr(value);\r\n    }\r\n    // if (length && width && height){\r\n    //     setCbmValue(length*width*height);\r\n    // }\r\n  };\r\n\r\n  const functionSet = {\r\n    testTitle,\r\n    setTestTitle,\r\n    question,\r\n    setQuestion,\r\n    answerArr,\r\n    setAnswerArr,\r\n    onChange,\r\n  };\r\n  return (\r\n    <>\r\n\r\n        <RegisterStep functionSet={functionSet}></RegisterStep>\r\n    </>\r\n  );\r\n};\r\nexport default RegisterTestContents;\r\n","import React from \"react\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport AuthForm from \"./pages/AuthForm\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport MainContents from \"./elements/Contents/MainContents\";\r\nimport RegisterTestContents from \"./elements/Contents/RegisterTestContents\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/login\">\r\n        <AuthForm></AuthForm>\r\n      </Route>\r\n      <Route exact path=\"/signup\">\r\n        <AuthForm></AuthForm>\r\n      </Route>\r\n      <Route exact path=\"/register\">\r\n        <RegisterTestContents></RegisterTestContents>\r\n      </Route>\r\n      <Route exact path={[\"/main\", \"/\"]}>\r\n        <MainContents></MainContents>\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport { Layout, Menu } from \"antd\";\r\nimport AppRouter from \"../Router\";\r\nimport {\r\n  UploadOutlined,\r\n  UserOutlined,\r\n  VideoCameraOutlined,\r\n} from \"@ant-design/icons\";\r\nimport firebase from \"firebase\";\r\nimport { MainProps } from \"../interfaces/MainProps\";\r\nimport { authService } from \"../fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst MainPage: React.FC<MainProps> = (props) => {\r\n  const { Header, Content, Footer, Sider } = Layout;\r\n  const history = useHistory();\r\n  const onMainContentClick = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onSignIn = () => {\r\n    history.push(\"/login\");\r\n  };\r\n  const onSignUp = () => {\r\n    history.push(\"/signup\");\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <Sider\r\n        breakpoint=\"lg\"\r\n        collapsedWidth=\"0\"\r\n        onBreakpoint={(broken) => {\r\n          console.log(broken);\r\n        }}\r\n        onCollapse={(collapsed, type) => {\r\n          console.log(collapsed, type);\r\n        }}\r\n      >\r\n        <div\r\n          className=\"logo\"\r\n          style={{\r\n            height: 32,\r\n            margin: 16,\r\n            background: \"rgba(255, 255, 255, 0.2)\",\r\n          }}\r\n        />\r\n        <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\r\n          <Menu.Item\r\n            key=\"1\"\r\n            icon={<UserOutlined />}\r\n            onClick={() => onMainContentClick()}\r\n          >\r\n            메인화면\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\r\n            nav 2\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\" icon={<UploadOutlined />}>\r\n            nav 3\r\n          </Menu.Item>\r\n          <Menu.Item key=\"4\" icon={<UserOutlined />}>\r\n            {props.isLoggedIn ? (\r\n              <a onClick={() => onLogOutClick()}>로그아웃</a>\r\n            ) : (\r\n              <a onClick={() => onSignIn()}>로그인/회원가입</a>\r\n            )}\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Sider>\r\n      <Layout>\r\n        <Header style={{ padding: 0, background: \"#fff\" }} />\r\n        <Content style={{ margin: \"12px 8px 0\" }}>\r\n          <div style={{ padding: 24, minHeight: 360, background: \"#fff\" }}>\r\n            <AppRouter></AppRouter>\r\n          </div>\r\n        </Content>\r\n        <Footer style={{ textAlign: \"center\" }}>11</Footer>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\nexport default MainPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TestPage from \"./pages/TestPage\";\r\nimport AppRouter from \"./Router\";\r\nimport MainPage from \"./pages/MainPage\";\r\nimport \"antd/dist/antd.css\";\r\nimport { authService } from \"./fbase\";\r\nimport firebase from \"firebase\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const TestProps = {\r\n    suiteArr: [\r\n      {\r\n        image:\r\n          \"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\",\r\n        question: \"처음 퀴즈는?\",\r\n        answerArr: [\r\n          {\r\n            answerStr: \"hello\",\r\n            answerVal: [\"a\", \"b\"],\r\n          },\r\n          {\r\n            answerStr: \"world\",\r\n            answerVal: [\"a\", \"b\"],\r\n          },\r\n          {\r\n            answerStr: \"or word?\",\r\n            answerVal: [\"a\", \"b\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        image:\r\n          \"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\",\r\n        question: \"두번째 퀴즈는?\",\r\n        answerArr: [\r\n          {\r\n            answerStr: \"hello2\",\r\n            answerVal: [\"a\", \"b\"],\r\n          },\r\n          {\r\n            answerStr: \"world2\",\r\n            answerVal: [\"a\", \"b\"],\r\n          },\r\n          {\r\n            answerStr: \"or word?2\",\r\n            answerVal: [\"a\", \"b\"],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        image:\r\n          \"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\",\r\n        question: \"세번째 퀴즈는?\",\r\n        answerArr: [\r\n          {\r\n            answerStr: \"hello3\",\r\n            answerVal: [\"a\", \"b\"],\r\n          },\r\n          {\r\n            answerStr: \"world3\",\r\n            answerVal: [\"a\", \"b\"],\r\n          },\r\n          {\r\n            answerStr: \"or word?3\",\r\n            answerVal: [\"a\", \"b\"],\r\n          },\r\n          {\r\n            answerStr:\r\n              \"문자열이 많은 버튼은 어떻게 표시될까요 알아맞춰보세요 딩동댕!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\",\r\n            answerVal: [\"a\", \"b\"],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState<firebase.User | null>(null);\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        setUserObj({\r\n          ...user,\r\n          displayName: user.email,\r\n          uid: user.uid,\r\n          updateProfile: (args) => user.updateProfile(args),\r\n        });\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    if (user) {\r\n      setUserObj({\r\n        ...user,\r\n        displayName: user.displayName,\r\n        uid: user.uid,\r\n        updateProfile: (args) => user.updateProfile(args),\r\n      });\r\n    } else {\r\n      setUserObj(null);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {init ? (\r\n        <div className=\"App\">\r\n          <Router basename=\"psychologicalTest\">\r\n            <MainPage\r\n              refreshUser={refreshUser}\r\n              isLoggedIn={Boolean(userObj)}\r\n              userObj={userObj}\r\n            ></MainPage>\r\n            {/* <TestPage {...TestProps}></TestPage> */}\r\n          </Router>\r\n        </div>\r\n      ) : (\r\n        \"Initializing...\"\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}